openapi: 3.0.1
info:
  title: One-Time Inverse Consultation (OTIC) API
  description: 'This API allows to obtain translations from a source language into a target language by pivoting on a third language in the Apertium RDF graph. It is based on the method proposed by Tanaka and Umemura in 1994 [1], and adapted by Lin et. al 2011 [2]. References: [1] K. Tanaka and K. Umemura. "Construction of a bilingual dictionary intermediated by a third language". In COLING, pages 297–303, 1994. [2] L. T. Lim, B. Ranaivo-Malançon, and E. K. Tang. "Low cost construction of a multilingual lexicon from bilingual lists". Polibits, 43:45–51, 2011.'
  version: 1.0.0-oas3
  x-port: 8080
paths:
  /uploadDict/{source}-{target}:
    post:
      tags:
        - translation
      description: Stores in memory a given dictionary received as a single String (following the TIAD format, see https://tiad2020.unizar.es/task.html 'shortcut')
      operationId: uploadDict
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
          example: en
        - name: target
          in: path
          required: true
          schema:
            type: string
          example: es
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: Dictionary upploaded in memory
          content:
            '*/*':
              schema:
                type: string
  /translationPost/{source}-{pivot}-{target}/{entry}:
    post:
      tags:
        - translation
      description: Given a source, pivot, and target languages, and an SPARQL Endpoint returns a list of inferred TranslatablePair instances for the given entry in the source language
      operationId: translationsFromEntryPost
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
          example: en
        - name: pivot
          in: path
          required: true
          schema:
            type: string
          example: es
        - name: target
          in: path
          required: true
          schema:
            type: string
          example: fr
        - name: entry
          in: path
          required: true
          schema:
            type: string
          example: dog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UrlEndpoint'
        required: true
      responses:
        '200':
          description: An array of TranslatablePair instances
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TranslatablePair'
  /translationFromMem/{source}-{pivot}-{target}/{entry}:
    get:
      tags:
        - translation
      description: Given a source, pivot, and target languages, returns a list of inferred TranslatablePair instances for the given entry in the source language. This call will use the dictionaries stored in memory
      operationId: translationsFromMem
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
          example: en
        - name: pivot
          in: path
          required: true
          schema:
            type: string
          example: es
        - name: target
          in: path
          required: true
          schema:
            type: string
          example: fr
        - name: entry
          in: path
          required: true
          schema:
            type: string
          example: book
      responses:
        '200':
          description: An array of TranslatablePair instances
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TranslatablePair'
  /translation/{source}-{pivot}-{target}:
    get:
      tags:
        - translation
      description: 'Given a source, pivot, and target languages, returns an inferred dictionary in the form of a list of TranslatablePair instances. This assumes that Apertium RDF is stored in the following SPARQL endpoint: http://dbserver.acoli.cs.uni-frankfurt.de:5005/ds/query. For a different SPARQL endpoint, try the call ''translationPost'' instead  (RECOMMENDED). '
      operationId: inferredBilingualDictionary
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
          example: en
        - name: pivot
          in: path
          required: true
          schema:
            type: string
          example: es
        - name: target
          in: path
          required: true
          schema:
            type: string
          example: fr
      responses:
        '200':
          description: An array of TranslatablePair instances
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TranslatablePair'
  /translation/{source}-{pivot}-{target}/{entry}:
    get:
      tags:
        - translation
      description: 'Given a source, pivot, and target languages, returns a list of inferred TranslatablePair instances for the given entry in the source language. This assumes that Apertium RDF is stored in the following SPARQL endpoint: http://dbserver.acoli.cs.uni-frankfurt.de:5005/ds/query. For a different SPARQL endpoint, try the call ''translationPost'' instead  (RECOMMENDED).'
      operationId: translationsFromEntry
      parameters:
        - name: source
          in: path
          required: true
          schema:
            type: string
          example: en
        - name: pivot
          in: path
          required: true
          schema:
            type: string
          example: es
        - name: target
          in: path
          required: true
          schema:
            type: string
          example: fr
        - name: entry
          in: path
          required: true
          schema:
            type: string
          example: dog
      responses:
        '200':
          description: An array of TranslatablePair instances
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TranslatablePair'
components:
  schemas:
    UrlEndpoint:
      type: object
      properties:
        urlEndpoint:
          type: string
    TranslatablePair:
      type: object
      properties:
        sourceLabel:
          type: string
        targetLabel:
          type: string
        score:
          type: number
          format: double
        pos:
          type: string
        targetLexicalEntry:
          type: string
        sourceLexicalEntry:
          type: string
        fragmentPos:
          type: string
